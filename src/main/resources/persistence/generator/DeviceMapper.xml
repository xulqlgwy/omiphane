<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.omiphane.generator.dao.DeviceMapper" >
  <resultMap id="BaseResultMap" type="com.omiphane.generator.model.Device" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="device_id" property="deviceId" jdbcType="VARCHAR" />
    <result column="device_type" property="deviceType" jdbcType="INTEGER" />
    <result column="device_sn" property="deviceSn" jdbcType="VARCHAR" />
    <result column="device_name" property="deviceName" jdbcType="VARCHAR" />
    <result column="parent_node_id" property="parentNodeId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    id, device_id, device_type, device_sn, device_name, parent_node_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="com.omiphane.generator.model.DeviceExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from device
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select 
    <include refid="Base_Column_List" />
    from device
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from device
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.omiphane.generator.model.DeviceExample" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    delete from device
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.omiphane.generator.model.Device" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into device (id, device_id, device_type, 
      device_sn, device_name, parent_node_id
      )
    values (#{id,jdbcType=INTEGER}, #{deviceId,jdbcType=VARCHAR}, #{deviceType,jdbcType=INTEGER}, 
      #{deviceSn,jdbcType=VARCHAR}, #{deviceName,jdbcType=VARCHAR}, #{parentNodeId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.omiphane.generator.model.Device" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    insert into device
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="deviceId != null" >
        device_id,
      </if>
      <if test="deviceType != null" >
        device_type,
      </if>
      <if test="deviceSn != null" >
        device_sn,
      </if>
      <if test="deviceName != null" >
        device_name,
      </if>
      <if test="parentNodeId != null" >
        parent_node_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="deviceId != null" >
        #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null" >
        #{deviceType,jdbcType=INTEGER},
      </if>
      <if test="deviceSn != null" >
        #{deviceSn,jdbcType=VARCHAR},
      </if>
      <if test="deviceName != null" >
        #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="parentNodeId != null" >
        #{parentNodeId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.omiphane.generator.model.DeviceExample" resultType="java.lang.Integer" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    select count(*) from device
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update device
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.deviceId != null" >
        device_id = #{record.deviceId,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceType != null" >
        device_type = #{record.deviceType,jdbcType=INTEGER},
      </if>
      <if test="record.deviceSn != null" >
        device_sn = #{record.deviceSn,jdbcType=VARCHAR},
      </if>
      <if test="record.deviceName != null" >
        device_name = #{record.deviceName,jdbcType=VARCHAR},
      </if>
      <if test="record.parentNodeId != null" >
        parent_node_id = #{record.parentNodeId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update device
    set id = #{record.id,jdbcType=INTEGER},
      device_id = #{record.deviceId,jdbcType=VARCHAR},
      device_type = #{record.deviceType,jdbcType=INTEGER},
      device_sn = #{record.deviceSn,jdbcType=VARCHAR},
      device_name = #{record.deviceName,jdbcType=VARCHAR},
      parent_node_id = #{record.parentNodeId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="com.omiphane.generator.model.Device" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update device
    <set >
      <if test="deviceId != null" >
        device_id = #{deviceId,jdbcType=VARCHAR},
      </if>
      <if test="deviceType != null" >
        device_type = #{deviceType,jdbcType=INTEGER},
      </if>
      <if test="deviceSn != null" >
        device_sn = #{deviceSn,jdbcType=VARCHAR},
      </if>
      <if test="deviceName != null" >
        device_name = #{deviceName,jdbcType=VARCHAR},
      </if>
      <if test="parentNodeId != null" >
        parent_node_id = #{parentNodeId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.omiphane.generator.model.Device" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    update device
    set device_id = #{deviceId,jdbcType=VARCHAR},
      device_type = #{deviceType,jdbcType=INTEGER},
      device_sn = #{deviceSn,jdbcType=VARCHAR},
      device_name = #{deviceName,jdbcType=VARCHAR},
      parent_node_id = #{parentNodeId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>