package com.omiphane.generator.model;

import java.util.ArrayList;
import java.util.List;

public class DeviceDataExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table device_data
     *
     * @mbggenerated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table device_data
     *
     * @mbggenerated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table device_data
     *
     * @mbggenerated
     */
    protected List<Criteria> oredCriteria;

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table device_data
     *
     * @mbggenerated
     */
    public DeviceDataExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table device_data
     *
     * @mbggenerated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table device_data
     *
     * @mbggenerated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table device_data
     *
     * @mbggenerated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table device_data
     *
     * @mbggenerated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table device_data
     *
     * @mbggenerated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table device_data
     *
     * @mbggenerated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table device_data
     *
     * @mbggenerated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table device_data
     *
     * @mbggenerated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table device_data
     *
     * @mbggenerated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table device_data
     *
     * @mbggenerated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table device_data
     *
     * @mbggenerated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return (Criteria) this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return (Criteria) this;
        }

        public Criteria andIdEqualTo(Integer value) {
            addCriterion("id =", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotEqualTo(Integer value) {
            addCriterion("id <>", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThan(Integer value) {
            addCriterion("id >", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("id >=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThan(Integer value) {
            addCriterion("id <", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdLessThanOrEqualTo(Integer value) {
            addCriterion("id <=", value, "id");
            return (Criteria) this;
        }

        public Criteria andIdIn(List<Integer> values) {
            addCriterion("id in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotIn(List<Integer> values) {
            addCriterion("id not in", values, "id");
            return (Criteria) this;
        }

        public Criteria andIdBetween(Integer value1, Integer value2) {
            addCriterion("id between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andIdNotBetween(Integer value1, Integer value2) {
            addCriterion("id not between", value1, value2, "id");
            return (Criteria) this;
        }

        public Criteria andDeviceIdIsNull() {
            addCriterion("device_id is null");
            return (Criteria) this;
        }

        public Criteria andDeviceIdIsNotNull() {
            addCriterion("device_id is not null");
            return (Criteria) this;
        }

        public Criteria andDeviceIdEqualTo(Integer value) {
            addCriterion("device_id =", value, "deviceId");
            return (Criteria) this;
        }

        public Criteria andDeviceIdNotEqualTo(Integer value) {
            addCriterion("device_id <>", value, "deviceId");
            return (Criteria) this;
        }

        public Criteria andDeviceIdGreaterThan(Integer value) {
            addCriterion("device_id >", value, "deviceId");
            return (Criteria) this;
        }

        public Criteria andDeviceIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("device_id >=", value, "deviceId");
            return (Criteria) this;
        }

        public Criteria andDeviceIdLessThan(Integer value) {
            addCriterion("device_id <", value, "deviceId");
            return (Criteria) this;
        }

        public Criteria andDeviceIdLessThanOrEqualTo(Integer value) {
            addCriterion("device_id <=", value, "deviceId");
            return (Criteria) this;
        }

        public Criteria andDeviceIdIn(List<Integer> values) {
            addCriterion("device_id in", values, "deviceId");
            return (Criteria) this;
        }

        public Criteria andDeviceIdNotIn(List<Integer> values) {
            addCriterion("device_id not in", values, "deviceId");
            return (Criteria) this;
        }

        public Criteria andDeviceIdBetween(Integer value1, Integer value2) {
            addCriterion("device_id between", value1, value2, "deviceId");
            return (Criteria) this;
        }

        public Criteria andDeviceIdNotBetween(Integer value1, Integer value2) {
            addCriterion("device_id not between", value1, value2, "deviceId");
            return (Criteria) this;
        }

        public Criteria andPropEnumIsNull() {
            addCriterion("prop_enum is null");
            return (Criteria) this;
        }

        public Criteria andPropEnumIsNotNull() {
            addCriterion("prop_enum is not null");
            return (Criteria) this;
        }

        public Criteria andPropEnumEqualTo(Integer value) {
            addCriterion("prop_enum =", value, "propEnum");
            return (Criteria) this;
        }

        public Criteria andPropEnumNotEqualTo(Integer value) {
            addCriterion("prop_enum <>", value, "propEnum");
            return (Criteria) this;
        }

        public Criteria andPropEnumGreaterThan(Integer value) {
            addCriterion("prop_enum >", value, "propEnum");
            return (Criteria) this;
        }

        public Criteria andPropEnumGreaterThanOrEqualTo(Integer value) {
            addCriterion("prop_enum >=", value, "propEnum");
            return (Criteria) this;
        }

        public Criteria andPropEnumLessThan(Integer value) {
            addCriterion("prop_enum <", value, "propEnum");
            return (Criteria) this;
        }

        public Criteria andPropEnumLessThanOrEqualTo(Integer value) {
            addCriterion("prop_enum <=", value, "propEnum");
            return (Criteria) this;
        }

        public Criteria andPropEnumIn(List<Integer> values) {
            addCriterion("prop_enum in", values, "propEnum");
            return (Criteria) this;
        }

        public Criteria andPropEnumNotIn(List<Integer> values) {
            addCriterion("prop_enum not in", values, "propEnum");
            return (Criteria) this;
        }

        public Criteria andPropEnumBetween(Integer value1, Integer value2) {
            addCriterion("prop_enum between", value1, value2, "propEnum");
            return (Criteria) this;
        }

        public Criteria andPropEnumNotBetween(Integer value1, Integer value2) {
            addCriterion("prop_enum not between", value1, value2, "propEnum");
            return (Criteria) this;
        }

        public Criteria andPropDataIsNull() {
            addCriterion("prop_data is null");
            return (Criteria) this;
        }

        public Criteria andPropDataIsNotNull() {
            addCriterion("prop_data is not null");
            return (Criteria) this;
        }

        public Criteria andPropDataEqualTo(String value) {
            addCriterion("prop_data =", value, "propData");
            return (Criteria) this;
        }

        public Criteria andPropDataNotEqualTo(String value) {
            addCriterion("prop_data <>", value, "propData");
            return (Criteria) this;
        }

        public Criteria andPropDataGreaterThan(String value) {
            addCriterion("prop_data >", value, "propData");
            return (Criteria) this;
        }

        public Criteria andPropDataGreaterThanOrEqualTo(String value) {
            addCriterion("prop_data >=", value, "propData");
            return (Criteria) this;
        }

        public Criteria andPropDataLessThan(String value) {
            addCriterion("prop_data <", value, "propData");
            return (Criteria) this;
        }

        public Criteria andPropDataLessThanOrEqualTo(String value) {
            addCriterion("prop_data <=", value, "propData");
            return (Criteria) this;
        }

        public Criteria andPropDataLike(String value) {
            addCriterion("prop_data like", value, "propData");
            return (Criteria) this;
        }

        public Criteria andPropDataNotLike(String value) {
            addCriterion("prop_data not like", value, "propData");
            return (Criteria) this;
        }

        public Criteria andPropDataIn(List<String> values) {
            addCriterion("prop_data in", values, "propData");
            return (Criteria) this;
        }

        public Criteria andPropDataNotIn(List<String> values) {
            addCriterion("prop_data not in", values, "propData");
            return (Criteria) this;
        }

        public Criteria andPropDataBetween(String value1, String value2) {
            addCriterion("prop_data between", value1, value2, "propData");
            return (Criteria) this;
        }

        public Criteria andPropDataNotBetween(String value1, String value2) {
            addCriterion("prop_data not between", value1, value2, "propData");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table device_data
     *
     * @mbggenerated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table device_data
     *
     * @mbggenerated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}